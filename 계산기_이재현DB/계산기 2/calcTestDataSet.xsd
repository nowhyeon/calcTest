<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="calcTestDataSet" targetNamespace="http://tempuri.org/calcTestDataSet.xsd" xmlns:mstns="http://tempuri.org/calcTestDataSet.xsd" xmlns="http://tempuri.org/calcTestDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="calcTestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="calcTestConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.계산기_2.My.MySettings.GlobalReference.Default.calcTestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestTableAdapter" GeneratorDataComponentClassName="TestTableAdapter" Name="Test" UserDataComponentName="TestTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="calcTestConnectionString (MySettings)" DbObjectName="calcTest.dbo.Test" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Test] WHERE (([test_no] = @Original_test_no) AND ((@IsNull_test_val = 1 AND [test_val] IS NULL) OR ([test_val] = @Original_test_val)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_test_no" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_no" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_test_val" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_val" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_test_val" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_val" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Test] ([test_no], [test_val]) VALUES (@test_no, @test_val);
SELECT test_no, test_val FROM Test WHERE (test_no = @test_no)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@test_no" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_no" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@test_val" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_val" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT test_no, test_val FROM dbo.Test</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Test] SET [test_no] = @test_no, [test_val] = @test_val WHERE (([test_no] = @Original_test_no) AND ((@IsNull_test_val = 1 AND [test_val] IS NULL) OR ([test_val] = @Original_test_val)));
SELECT test_no, test_val FROM Test WHERE (test_no = @test_no)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@test_no" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_no" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@test_val" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_val" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_test_no" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_no" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_test_val" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_val" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_test_val" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="test_val" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="test_no" DataSetColumn="test_no" />
              <Mapping SourceColumn="test_val" DataSetColumn="test_val" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="calcTestDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="calcTestDataSet" msprop:Generator_UserDSName="calcTestDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Test" msprop:Generator_TableClassName="TestDataTable" msprop:Generator_TableVarName="tableTest" msprop:Generator_TablePropName="Test" msprop:Generator_RowDeletingName="TestRowDeleting" msprop:Generator_RowChangingName="TestRowChanging" msprop:Generator_RowEvHandlerName="TestRowChangeEventHandler" msprop:Generator_RowDeletedName="TestRowDeleted" msprop:Generator_UserTableName="Test" msprop:Generator_RowChangedName="TestRowChanged" msprop:Generator_RowEvArgName="TestRowChangeEvent" msprop:Generator_RowClassName="TestRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="test_no" msprop:Generator_ColumnVarNameInTable="columntest_no" msprop:Generator_ColumnPropNameInRow="test_no" msprop:Generator_ColumnPropNameInTable="test_noColumn" msprop:Generator_UserColumnName="test_no" type="xs:int" />
              <xs:element name="test_val" msprop:Generator_ColumnVarNameInTable="columntest_val" msprop:Generator_ColumnPropNameInRow="test_val" msprop:Generator_ColumnPropNameInTable="test_valColumn" msprop:Generator_UserColumnName="test_val" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Test" />
      <xs:field xpath="mstns:test_no" />
    </xs:unique>
  </xs:element>
</xs:schema>